// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schemas

model Game {
  id             Int              @id @default(autoincrement())
  gamePlayer     GamePlayer[]
  dateCreated    DateTime         @default(now())
  dateStarted    String?
  dateEnded      String?
  gamePlayerCard GamePlayerCard[]
}

model GamePlayer {
  id         Int       @id @default(autoincrement())
  game       Game      @relation(fields: [gameId], references: [id])
  name       String
  discordId  String
  coins      Int
  isWinner   Boolean   @default(false)
  dateJoined DateTime?

  gameId         Int
  gamePlayerCard GamePlayerCard[]
}

model Card {
  id                         Int                         @id @default(autoincrement())
  name                       String
  cardActionAttribute        CardActionAttribute?
  cardCounterActionAttribute CardCounterActionAttribute?
  GamePlayerCard             GamePlayerCard[]
}

model CardActionAttribute {
  id             Int     @id @default(autoincrement())
  card           Card    @relation(fields: [cardId], references: [id])
  canTax         Boolean @default(false)
  canAssassinate Boolean @default(false)
  canExchange    Boolean @default(false)
  canSteal       Boolean @default(false)

  cardId Int @unique
}

model CardCounterActionAttribute {
  id                    Int     @id @default(autoincrement())
  card                  Card    @relation(fields: [cardId], references: [id])
  canBlockForeignAid    Boolean @default(false)
  canBlockStealing      Boolean @default(false)
  canBlockAssassination Boolean @default(false)

  cardId Int @unique
}

model GamePlayerCard {
  id         Int        @id @default(autoincrement())
  card       Card       @relation(fields: [cardId], references: [id])
  game       Game       @relation(fields: [gameId], references: [id])
  gamePlayer GamePlayer @relation(fields: [gamePlayerId], references: [id])

  cardId         Int
  gameId         Int
  gamePlayerId   Int
  isCardRevealed Boolean @default(false)
}
